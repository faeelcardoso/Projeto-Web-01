#page-create-point {
    width: 90%; /* Largura 90%, mas quando chegar 1100px não para */
    max-width: 1100px;
    
    /* Alinhamento de caixa ( pelo lado de fora da caixa */
    margin: 0 auto; /* Cima e baixo 0, laterais automatico */
}

#page-create-point header {
    margin-top: 48px;

    display: flex;
    justify-content: space-between;
    align-items: center;
}

#page-create-point header a {
    color: var(--title-color);
    font-weight: bold;

    display: flex; /* Para alinhalos um ao lado do outro */
    align-items: center;
}

#page-create-point header a span {
    margin-right: 16px;
    background-image: url('../assets/arrow-left.svg');

    display: flex;

    width: 20px;
    height: 24px;
}

form {
    background-color: white;

    margin: 80px auto;
    padding: 64px; /* Preenchimento interno */

    border-radius: 8px; /* Borda */

    max-width: 730px;
}

form h1 {
    font-size: 36px;
}

form fieldset {
    margin-top: 64px;

    border: 0;
}

form legend {
    margin-bottom: 40px;
}

form legend h2 {
    font-size: 24px;
}

form .field { /* Está pegando a div field */
    flex: 1; /* Para eles se esticarem */
    display: flex;
    flex-direction: column; /* Flex um ao lado do outro, coluna fica top*/

    margin-bottom: 24px;
}

form .field-group {
    display: flex;
}

form input,
form select {
    background-color: #f0f0f5;

    border: 0; /* Tirar a borda padrão */
    padding: 16px 24px;
    font-size: 16px;

    border-radius: 8px; /* Borda arredondada */

     /* efeito que fica ao clicar no label, se não quiser nada outline: none; */
    outline-color: purple;
}

form select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    /* Isso reseta toda a parte do browser como chrome, firefox... Se não alguns efeitos não funcionam */
}

form label {
    font-size: 14px;
    margin-bottom: 8px; /* Pra dar uma separada nos botões */
}

form .field-group .field + .field { /* Assim pega o field que tem um outro field grudado ao lado */
    margin-left: 24px;
}

form button {
    width: 260px;
    height: 56px;

    background-color: var(--primary-color);
    border-radius: 8px;

    color: white;
    font-weight: bold;
    font-size: 16px;

    border: 0;

    margin-top: 40px;

    transition: background-color 400ms; /* hover ficar mais bacana */
}

form button:hover { /* Hover é pra quando passar o mouse em cima */
    background-color: #2fb86e;
}

.items-grid {
    display: grid; /* Diferente do flex, que é unidimensional, ou fica um doo lado do outro, ou ele fica abaixo  */
    /* grid já é mais multidimensional */
    grid-template-columns: 1fr 1fr 1fr; /* Ele mesmo calcula o tamanho da coluna */
    /* Eu podia colocar o tamanho que eu quisesse tbm, tipo 3 colunas grandes, 200px 200px 200px */
    gap: 16px; /* Quando trabalha com grid, tem a função gap que é parecida com a margin, ele separa cada elemento */
    /* Com o margin seria um pouco mais complexo */
}

.items-grid li {
    background-color: #f5f5f5;
    list-style: none; /* remove os pontos */

    border: 2px solid #f5f5f5;
    border-radius: 8px;

    height: 180px;

    padding: 32px 24px 16px;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;

    text-align: center;

    cursor: pointer; /* cursor */
}

.items-grid li span {
    margin-top: 12px;

    flex: 1; /* preencher sozinho */
    
    display: flex;
    align-items: center;

    color: var(--title-color);
}

.items-grid li.selected {
    background: #e1faec;
    border: 2px solid #34cb79; 
}

.items-grid li img,
.items-grid li span {
    pointer-events: none;
    /* Para quando o usuário clicar tanto na img, quando no texto, mandar sempre o id, não a img ou texto kkk */
    /* Dessa forma o target no JS sempre será o id do li */
}